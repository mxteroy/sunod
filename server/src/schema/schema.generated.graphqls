type AuthPayload {
  accessToken: String!
  user: User!
}

scalar DateTime

scalar JSON

type Mutation {
  loginAnonymous: AuthPayload!
  loginWithEmail(email: String!, password: String!): AuthPayload!
  loginWithGoogle(idToken: String!): AuthPayload!
  logout: Boolean!
  refreshSession: RefreshPayload!
  registerWithEmail(email: String!, password: String!): AuthPayload!
}

type Query {
  demoSpaceEvents: [JSON!]!
  me: User
}

type RefreshPayload {
  accessToken: String!
}

type Space {
  createdAt: String!
  id: ID!
  schema: JSON!
  updatedAt: String!
}

type Subscription {
  demoSpaceEvents: JSON!
}

type User {
  country: String
  handle: String
  id: ID!
  role: UserRole!
}

enum UserRole {
  ADMIN
  MOD
  USER
}